{"mappings":"iiBAAAA,EAAA,SCCA,IAAAC,EAAAD,EAAA,SAGA,IACME,EAAiB,4CAGjBC,EAASC,SAASC,cAAc,WAEhCC,GADYF,SAASC,cAAc,qBACtBD,SAASC,cAAc,kBAE1CF,EAAOI,iBAAiB,UAMxB,SAAoBC,GAIlB,GAHAA,EAAEC,iBAGY,MAFdC,EAAQA,EAAQF,EAAEG,cAAcC,OAAOC,MAAMC,QAG3C,OAAOR,EAAWS,UAAUC,IAAI,aAGlC,IAAMC,EAAsB,IAAIC,gBAAgB,CAC9CC,QAAS,mCACTC,MAAOV,EACPW,KAAM,IAGRC,EADY,GAAqBC,OAAlBrB,EAAe,KAAuBqB,OAApBN,IAE9BO,MAAK,SAAAC,GCjCK,IAAoBC,EAC3BC,EACAC,EDgCFC,EAAeJ,EAAUK,cACzBC,QAAQC,IAAIP,IACZ,EAAAxB,EAAAgC,cAAaR,GCpCgBC,EDqClBG,ECpCTF,EAAavB,SAASC,cAAc,iBACpCuB,EAAQxB,SAASC,cAAc,UACtB,IAAXqB,GACME,EAAMb,UAAUmB,OAAQ,aACzBP,EAAWZ,UAAUmB,OAAO,eAGrCN,EAAMb,UAAUC,IAAK,aACdW,EAAWZ,UAAUC,IAAI,a,IDgC7BmB,OAAM,SAAAC,GACLL,QAAQC,IAAII,E,OA5BlB,IAAI1B,EAAQ,GAERmB,EAAe,EA+CnB,SAASP,EAAWe,GAClB,OAAOC,MAAMD,GAAKb,MAAK,SAAAe,GACrB,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,M,IEpEpB,IAAAC,EAAA5C,EAAA,S,8EAQE6C,G,aAAS,IAAAC,SACTC,EAAQ,IAAAD,QAmBJE,EAAmB,IADzB,W,sBApBOC,I,aACLC,EAAAC,EAAA,CAAAC,KAAAP,EAAS,C,kBAAG,kCACZK,EAAAC,EAAA,CAAAC,KAAAL,EAAQ,C,kBAAG,qCAGTK,KAAK/B,KAAO,C,iBAGRgC,IAAA,c,MAAN,W,kBAAAH,EAAAN,EAAA,CAAAM,EAAAI,GAAAC,MAAA,SAAAC,I,2FAEiBC,EAAAC,QAAMC,IAAI,GAACpC,OAAA2B,EAAAU,EAAA,CAAAC,EAAQhB,GAAS,gCAA4CtB,OAAA2B,EAAAU,EAAA,CAAAC,EAARd,K,+CAE7E,M,yBAAM,IAAIN,MAAMqB,EAAAC,GAAIC,S,uDAJxB,E,OAYF,IAiBAC,OAAO1D,iBAAiB,QAdE,WAExByC,EACCkB,cACA1C,MAAK,SAAA2C,G,IAAEC,EAAID,EAAJC,MAEV,EAAAnE,EAAAgC,cAAamC,E,IAGRjC,OAAM,SAAAkC,GACPtC,QAAQC,IAAIqC,E","sources":["src/index.js","src/pagination.js","src/input-error.js","src/popular-movies.js"],"sourcesContent":["import './spinner.js';\nimport './fetchFilms.js';\nimport './pagination.js';\nimport './popular-movies.js';\nimport './modal-team.js'\n\n// import './js/render-markup.js';\n\n","// import { fetchFilms } from './fetchFilms.js';\nimport { renderMarkup } from './js/render-markup';\nimport inputError from './input-error';\n\nconst BASE_URL_TRENDS = 'https://api.themoviedb.org/3/trending/all/day';\nconst BASE_URL_QUERY = 'https://api.themoviedb.org/3/search/movie';\nconst API_KEY = '1962278b5026dd7c7bb0a91cd47f798b';\n\nconst formEl = document.querySelector('.search');\nconst spinnerEl = document.querySelector('.preloader__image');\nconst inputErrEl = document.querySelector('.error-input ');\n\nformEl.addEventListener('submit', inputQuery);\n\nlet value = '';\n// в totalResults буде записана загальна кількість об’єктів які прийшли з бекенду щоб розрахувати кількість сторінок\nlet totalResults = 0;\n\nfunction inputQuery(e) {\n  e.preventDefault()\n  value = value = e.currentTarget.search.value.trim();\n\n  if (value === '') {\n    return inputErrEl.classList.add('is-hidden');\n  }\n\n  const searchParamsToQuery = new URLSearchParams({\n    api_key: '1962278b5026dd7c7bb0a91cd47f798b',\n    query: value,\n    page: 1,\n  });\n  const url = `${BASE_URL_QUERY}?${searchParamsToQuery}`;\n  fetchFilms(url)\n    .then(forMarcup => {\n      totalResults = forMarcup.total_results;\n      console.log(forMarcup)\n      renderMarkup(forMarcup);\n      inputError(totalResults);\n\n      // return console.log(totalResults);\n    })\n    .catch(er => {\n      console.log(er);\n    });\n}\n// <----------функція яка викликається при натисканні на кнопки пагінації\n// в count має передаватися номер сторінки яка має бути завантажена і намальована------->\nfunction moreFilms(count) {\n  const searchParamsToQuery = new URLSearchParams({\n    api_key: '1962278b5026dd7c7bb0a91cd47f798b',\n    query: value,\n    page: count,\n  });\n  const url = `${BASE_URL_QUERY}?${searchParamsToQuery}`;\n  fetchFilms(url)\n    .then(forMarcup => {\n      // return console.log(totalResults);\n    })\n    .catch(er => {\n      console.log(er);\n    });\n}\n\nfunction fetchFilms(url) {\n  return fetch(url).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    return response.json();\n  });\n}\n\n// <----------------->\n\n// const paginationContainer = document.querySelector('.pagination');\n// const paginationButtons =\n//   paginationContainer.querySelectorAll('.pagination-btn');\n// const previousButton = paginationContainer.querySelector('.previous-btn');\n// const nextButton = paginationContainer.querySelector('.next-btn');\n// const endButton = paginationContainer.querySelector('.end-btn');\n// const nextDotsButton = paginationContainer.querySelector('.next-dots');\n\n// let currentPage = 1;\n// const totalPages = paginationButtons.length - 2;\n\n// function displayCurrentPage() {\n//   paginationButtons.forEach(button => {\n//     button.classList.remove('active-pagination');\n//     if (button.innerText == currentPage) {\n//       button.classList.add('active-pagination');\n//     }\n//   });\n// }\n\n// paginationButtons.forEach(button => {\n//   button.addEventListener('click', () => {\n//     if (button.innerText != '...' && currentPage != button.innerText) {\n//       currentPage = parseInt(button.innerText);\n//       displayCurrentPage();\n//     }\n//   });\n// });\n\n// previousButton.addEventListener('click', () => {\n//   if (currentPage > 1) {\n//     currentPage--;\n//     displayCurrentPage();\n//   }\n// });\n\n// nextButton.addEventListener('click', () => {\n//   if (currentPage < totalPages) {\n//     currentPage++;\n//     displayCurrentPage();\n//   }\n// });\n\n// endButton.addEventListener('click', () => {\n//   if (currentPage != totalPages) {\n//     currentPage = totalPages;\n//     displayCurrentPage();\n//   }\n// });\n\n// nextDotsButton.addEventListener('click', () => {\n//   if (currentPage < totalPages - 2) {\n//     currentPage += 3;\n//     displayCurrentPage();\n//   } else {\n//     currentPage = totalPages;\n//     displayCurrentPage();\n//   }\n// });\n\n\n// const paginationContainer = document.querySelector('.pagination');\n// const paginationButtons =\n//   paginationContainer.querySelectorAll('.pagination-btn');\n// const nextButton = paginationContainer.querySelector('.next-btn');\n// const endButton = paginationContainer.querySelector('.end-btn');\n// const nextDotsButton = paginationContainer.querySelector('.next-dots');\n\n// let currentPage = 1;\n// const totalPages = paginationButtons.length - 2;\n\n// const paginationMarkup = () => {\n//   if (state.totalPages <= 1) return;\n//   const { pages, hasPrevGroup, hasNextGroup } = paginate(\n//     state.totalPages,\n//     state.currentPage\n//   );\n//   const firstPage = `<button type=\"button\" class=\"start-btn pagination-btn\">1</button>`;\n//   const lastPage = `<button type=\"button\" class=\"end-btn pagination-btn\">${state.totalPages}</button>`;\n//   const prev = `<button type=\"button\" class=\"pagination-btn\"></button>`;\n//   const next = `<button type=\"button\" class=\"next-btn pagination-btn\"></button>`;\n//   const dotsBtnPrev = `<button class=\"pagination-btn\">...</button>`;\n//   const dotsBtnNext = `<button class=\"pagination-btn next-dots\">...</button>`;\n//   const btnPages = pages\n//     .map(num => {\n//       const isActive = num === state.currentPage ? 'active-pagination' : '';\n//       return `<button type=\"button\" class=\"pagination-btn ${isActive}\n//         \">${num}</button>`;\n//     })\n//     .join('');\n//   const leftGroup = hasPrevGroup ? prev + firstPage + dotsBtnPrev : '';\n//   const rightGroup = hasNextGroup ? dotsBtnNext + lastPage + next : '';\n//   return leftGroup + btnPages + rightGroup;\n// };\n\n// const updateCurrentPage = newPage => {\n//   state.currentPage = newPage;\n//   clearPagination();\n\n//   renderPaginationMarkup();\n// };\n\n// const goToNextPage = () => {\n//   updateCurrentPage(state.currentPage + 1);\n// };\n// const goToPrevPage = () => {\n//   updateCurrentPage(state.currentPage - 1);\n// };\n// const goToNextGroupBtn = () => {\n//   const { pages } = paginate(state.totalPages, state.currentPage);\n//   const lastPageOfCurrentGroup = pages[pages.length - 1];\n//   const newPage = Math.min(lastPageOfCurrentGroup + 1, state.totalPages);\n//   state.currentPage = pages[pages.length - 1] + 1;\n//   updateCurrentPage(newPage);\n// };\n// const goToPrevGroupBtn = () => {\n//   const { pages } = paginate(state.totalPages, state.currentPage);\n//   const firstPageOfCurrentGroup = pages[0];\n//   const newPage = Math.max(firstPageOfCurrentGroup - 1, 1);\n//   updateCurrentPage(newPage);\n// };\n// const changePageByClick = evt => {\n//   const activeBtn = document.querySelector('.active-pagination');\n//   const selectedPage = Number(evt.target.textContent) || state.currentPage;\n//   if (selectedPage === state.currentPage) return;\n\n//   updateCurrentPage(selectedPage);\n//   activeBtn.classList.remove('active-pagination');\n//   evt.target.classList.add('active-pagination');\n// };\n\n// function displayCurrentPage() {\n//   paginationButtons.forEach(button => {\n//     button.classList.remove('active-pagination');\n//     if (button.innerText == currentPage) {\n//       button.classList.add('active-pagination');\n//     }\n//   });\n// }\n\n// paginationButtons.forEach(button => {\n//   button.addEventListener('click', () => {\n//     if (button.innerText != '...' && currentPage != button.innerText) {\n//       currentPage = parseInt(button.innerText);\n//       displayCurrentPage();\n//     }\n//   });\n// });\n\n// previousButton.addEventListener('click', () => {\n//   if (currentPage > 1) {\n//     currentPage--;\n//     displayCurrentPage();\n//   }\n// });\n\n// nextButton.addEventListener('click', () => {\n//   if (currentPage < totalPages) {\n//     currentPage++;\n//     displayCurrentPage();\n//   }\n// });\n\n// endButton.addEventListener('click', () => {\n//   if (currentPage != totalPages) {\n//     currentPage = totalPages;\n//     displayCurrentPage();\n//   }\n// });\n\n// nextDotsButton.addEventListener('click', () => {\n//   if (currentPage < totalPages - 2) {\n//     currentPage += 3;\n//     displayCurrentPage();\n//   } else {\n//     currentPage = totalPages;\n//     displayCurrentPage();\n//   }\n// });\n\n// const onBtnPageClick = async evt => {\n//   if (evt.target.nodeName !== 'BUTTON') return;\n//   if (Number(evt.target.textContent) === state.currentPage) return;\n//   if (evt.target.classList.contains('next-btn')) goToNextPage();\n//   if (evt.target.classList.contains('next-dots')) goToNextGroupBtn();\n//   if (evt.target.classList.contains('prev-dots')) goToPrevGroupBtn();\n//   changePageByClick(evt);\n//   window.scrollTo({\n//     top: 0,\n//   });\n//   moviesEl.innerHTML = '';\n//   whatPaginated(state.whatPaginated);\n// };\n","export default function inputError(result) {\n  const inputErrEl = document.querySelector('.error-input ');\n  const imgEl = document.querySelector('.start')\n  if (result === 0) {\n            imgEl.classList.remove ('is-hidden');\n    return inputErrEl.classList.remove('is-hidden');\n\n  }\n  imgEl.classList.add ('is-hidden');\n  return inputErrEl.classList.add('is-hidden');\n}\n","import axios from 'axios';\n// import { createCardsGallery } from './createCardGallery'; поміняти\n\n// const galleryEl = document.querySelector('.gallery'); замінити\nimport { renderMarkup } from './js/render-markup';\n\n\n class APIpopular {\n  #BASE_URL = 'https://api.themoviedb.org/3/';\n  #API_KEY = '1962278b5026dd7c7bb0a91cd47f798b';\n \n  constructor() {\n    this.page = 1;\n  }\n\n  async fetchMovies() {\n    try {\n      return await axios.get(`${this.#BASE_URL}trending/movie/week?api_key=${this.#API_KEY}`);\n    } catch (err) {\n      throw new Error(err.message);\n    }\n  }\n}\n\n\n\n\n\nconst ApipopularMovies = new APIpopular();\n\nconst handlerLoadWindow = () =>{\n\n  ApipopularMovies\n  .fetchMovies()\n  .then(({data})=>{\n// console.log(data)\nrenderMarkup(data);\n// поміняти \n// galleryEl.innerHTML = createCardsGallery(data.results);\n  }).catch(err => {\n    console.log(err)\n  })\n}\n\nwindow.addEventListener('load', handlerLoadWindow)"],"names":["parcelRequire","$7VSht","$a05c08abba1959c4$var$BASE_URL_QUERY","$a05c08abba1959c4$var$formEl","document","querySelector","$a05c08abba1959c4$var$inputErrEl","addEventListener","e","preventDefault","$a05c08abba1959c4$var$value","currentTarget","search","value","trim","classList","add","searchParamsToQuery","URLSearchParams","api_key","query","page","$a05c08abba1959c4$var$fetchFilms","concat","then","forMarcup","result","inputErrEl","imgEl","$a05c08abba1959c4$var$totalResults","total_results","console","log","renderMarkup","remove","catch","er","url","fetch","response","ok","Error","status","json","$bpxeT","$4164fd5cb8db3dd7$var$_BASE_URL","WeakMap","$4164fd5cb8db3dd7$var$_API_KEY","$4164fd5cb8db3dd7$var$ApipopularMovies","APIpopular","$parcel$interopDefault","$8MQK7","this","key","$2TvXO","mark","_callee","$dIxxU","default","get","$4KMWL","_this","_ctx","t0","message","window","fetchMovies","param","data","err"],"version":3,"file":"index.064d0a23.js.map"}