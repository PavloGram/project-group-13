{"mappings":"iiBAAAA,EAAA,S,WCAA,IAAAC,EAAAD,EAAA,S,2FAKME,EAAcC,SAASC,cAAc,aACrCC,EAAgBF,SAASC,cAAc,eACvCE,EAAeH,SAASC,cAAc,oBACtCG,EAAiBJ,SAASC,cAAc,UAG5CI,EAAQ,IAAAC,QAiBJC,EAAgB,IAAnB,W,sBAlBGC,I,aACJC,EAAAC,EAAA,CAAAC,KAAAN,EAAQ,C,kBAAG,qCAGTM,KAAKC,KAAO,C,iBAGRC,IAAA,c,MAAN,SAAkBC,G,kBAAlBL,EAAAX,EAAA,CAAAW,EAAAM,GAAAC,MAAA,SAAAC,I,2FAEiBC,EAAAC,QAAMC,IACjB,sCAAoCC,OAAEP,EAAQ,aAAyBO,OAAAZ,EAAAa,EAAA,CAAAC,EAARlB,K,+CAGjE,M,yBAAM,IAAImB,MAAMC,EAAAC,GAAIC,S,uDANxB,E,OAWC,IAEH,SAASC,IACPzB,EAAa0B,UAAY,GACzB,IAAMC,EAAYC,aAAaC,QA7BP,WA+BxB5B,EAAe6B,UAAUC,OAAO,aAE5BnC,EAAYkC,UAAUE,SAAS,cACjCpC,EAAYkC,UAAUC,OAAO,aAE/BhC,EAAc+B,UAAUG,IAAI,aAC5BlC,EAAc+B,UAAUG,IAAI,cAC5BrC,EAAYkC,UAAUC,OAAO,cAG7B,IAAIG,EAAgB,GAChBC,EAAQ,CACVC,QAAS,IAGX,GAAIT,EACF,IACmBU,KAAKC,MAAMX,GAEnBY,KAAI,SAAAC,GACXpC,EACGqC,YAAYD,GACZE,MAAK,SAAAC,G,IAAGC,EAAID,EAAJC,KAEP3C,EAAe6B,UAAUG,IAAI,aAE7BC,EAAgBU,EAAKC,OAAON,KAAI,SAAAO,G,OAASA,EAAMN,E,IACnCI,EAAKG,UAAYb,EAC7BU,EAAKC,OAAON,KAAI,SAAAO,G,OAASF,EAAKG,UAAUC,KAAKF,EAAMN,G,IACnDL,EAAMC,QAAQY,KAAKJ,E,IAIpBK,OAAM,SAAAC,GACLC,QAAQC,IAAIF,E,IAEbG,SAAQ,W,OAAM,EAAAC,EAAAC,cAAapB,E,OAEhC,MAAOqB,GACPL,QAAQK,MAAM,oBAAqBA,EAAMhC,Q,EAqD/CzB,EAAc0D,iBAAiB,QAAShC,GACxC7B,EAAY6D,iBAAiB,SAjD7B,WACEzD,EAAa0B,UAAY,GAEzB,IAAMC,EAAYC,aAAaC,QA7EP,SA+ExB5B,EAAe6B,UAAUC,OAAO,aAE5BhC,EAAc+B,UAAUE,SAAS,cACnCjC,EAAc+B,UAAUC,OAAO,aAEjCnC,EAAYkC,UAAUG,IAAI,aAC1BlC,EAAc+B,UAAUC,OAAO,cAC/BnC,EAAYkC,UAAUG,IAAI,cAE1B,IAAIC,EAAgB,GAChBC,EAAQ,CACVC,QAAS,IAGX,GAAIT,EACF,IACmBU,KAAKC,MAAMX,GAGnBY,KAAI,SAAAC,GACXpC,EACGqC,YAAYD,GACZE,MAAK,SAAAC,G,IAAGC,EAAID,EAAJC,KAEP3C,EAAe6B,UAAUG,IAAI,aAE7BC,EAAgBU,EAAKC,OAAON,KAAI,SAAAO,G,OAASA,EAAMN,E,IACnCI,EAAKG,UAAYb,EAC7BU,EAAKC,OAAON,KAAI,SAAAO,G,OAASF,EAAKG,UAAUC,KAAKF,EAAMN,G,IACnDL,EAAMC,QAAQY,KAAKJ,E,IAGpBK,OAAM,SAAAC,GACLC,QAAQC,IAAIF,E,IAEbG,SAAQ,W,OAAM,EAAAC,EAAAC,cAAapB,E,OAEhC,MAAOqB,GACPL,QAAQK,MAAM,oBAAqBA,EAAMhC,Q,KAO/CkC,OAAOD,iBAAiB,OAAQhC,G","sources":["src/myLibary.js","src/js/get_localstorage_info.js"],"sourcesContent":["import './js/spinner.js'\nimport './js/modal-team.js'\nimport './js/get_localstorage_info.js'\nimport './js/modal-about-movie.js'","import { renderMarkup } from './render-markup';\nimport axios from 'axios';\n\nconst STORAGE_KEY_WATCH = 'watched';\nconst STORAGE_KEY_QUEUE = 'queue';\nconst queueButton = document.querySelector('.js_queue');\nconst watchedButton = document.querySelector('.js_watched');\nconst galleryFilms = document.querySelector('.galleryFilms-js');\nconst nomoviesimages = document.querySelector('.start');\n\nclass ApiMovieSearch {\n  #API_KEY = '1962278b5026dd7c7bb0a91cd47f798b';\n\n  constructor() {\n    this.page = 1;\n  }\n\n  async fetchMovies(film_Id) {\n    try {\n      return await axios.get(\n        `https://api.themoviedb.org/3/movie/${film_Id}?api_key=${this.#API_KEY}`\n      );\n    } catch (err) {\n      throw new Error(err.message);\n    }\n  }\n}\n\nconst apiInfoMovies = new ApiMovieSearch();\n\nfunction handleGetWatchedFilms() {\n  galleryFilms.innerHTML = '';\n  const savedData = localStorage.getItem(STORAGE_KEY_WATCH);\n\n  nomoviesimages.classList.remove('is-hidden');\n\n  if (queueButton.classList.contains('is-active')) {\n    queueButton.classList.remove('is-active');\n  }\n  watchedButton.classList.add('is-active');\n  watchedButton.classList.add('btn-active');\n  queueButton.classList.remove('btn-active');\n\n\n  let datagenre_ids = []; \n  let films = {\n    results: [],\n  };\n\n  if (savedData) {\n    try {\n      const filmData = JSON.parse(savedData);\n      // console.log(filmData);\n      filmData.map(id => {\n        apiInfoMovies\n          .fetchMovies(id)\n          .then(({ data }) => {\n            // console.log(data);\n            nomoviesimages.classList.add('is-hidden');\n            // data.genre_ids = [];\n            datagenre_ids = data.genres.map(genre => genre.id);\n                        data.genre_ids = datagenre_ids;\n            data.genres.map(genre => data.genre_ids.push(genre.id));\n            films.results.push(data);\n            // console.log(films);\n            //  console.log(data.genre_ids);\n          })\n          .catch(err => {\n            console.log(err);\n          })\n          .finally(() => renderMarkup(films));\n      });\n    } catch (error) {\n      console.error('Get state error: ', error.message);\n    }\n  }\n}\n\nfunction handleGetQueueFilms() {\n  galleryFilms.innerHTML = '';\n\n  const savedData = localStorage.getItem(STORAGE_KEY_QUEUE);\n\n  nomoviesimages.classList.remove('is-hidden');\n\n  if (watchedButton.classList.contains('is-active')) {\n    watchedButton.classList.remove('is-active');\n  }\n  queueButton.classList.add('is-active');\n  watchedButton.classList.remove('btn-active');\n  queueButton.classList.add('btn-active');\n\n  let datagenre_ids = []; \n  let films = {\n    results: [],\n  };\n\n  if (savedData) {\n    try {\n      const filmData = JSON.parse(savedData);\n      // console.log(filmData);\n\n      filmData.map(id => {\n        apiInfoMovies\n          .fetchMovies(id)\n          .then(({ data }) => {\n            // console.log(data);\n            nomoviesimages.classList.add('is-hidden');\n            // data.genre_ids = [];\n            datagenre_ids = data.genres.map(genre => genre.id);\n                        data.genre_ids = datagenre_ids;\n            data.genres.map(genre => data.genre_ids.push(genre.id));\n            films.results.push(data);\n            // console.log(films);\n          })\n          .catch(err => {\n            console.log(err);\n          })\n          .finally(() => renderMarkup(films));\n      });\n    } catch (error) {\n      console.error('Get state error: ', error.message);\n    }\n  }\n}\n\nwatchedButton.addEventListener('click', handleGetWatchedFilms);\nqueueButton.addEventListener('click', handleGetQueueFilms);\nwindow.addEventListener('load', handleGetWatchedFilms);\n"],"names":["parcelRequire","$bpxeT","$ee2debf4941c2c14$var$queueButton","document","querySelector","$ee2debf4941c2c14$var$watchedButton","$ee2debf4941c2c14$var$galleryFilms","$ee2debf4941c2c14$var$nomoviesimages","$ee2debf4941c2c14$var$_API_KEY","WeakMap","$ee2debf4941c2c14$var$apiInfoMovies","ApiMovieSearch","$parcel$interopDefault","$8MQK7","this","page","key","film_Id","$2TvXO","mark","_callee","$dIxxU","default","get","concat","$4KMWL","_this","Error","_ctx","t0","message","$ee2debf4941c2c14$var$handleGetWatchedFilms","innerHTML","savedData","localStorage","getItem","classList","remove","contains","add","datagenre_ids","films","results","JSON","parse","map","id","fetchMovies","then","param","data","genres","genre","genre_ids","push","catch","err","console","log","finally","$7VSht","renderMarkup","error","addEventListener","window"],"version":3,"file":"myLibary.11e4f0f8.js.map"}