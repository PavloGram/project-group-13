{"mappings":"qhBAAAA,EAAA,S,WCAA,IAAAC,EAAAD,EAAA,S,uCAGA,MAEME,EAAcC,SAASC,cAAc,aACrCC,EAAgBF,SAASC,cAAc,eACvCE,EAAeH,SAASC,cAAc,oBACtCG,EAAiBJ,SAASC,cAAc,U,IAI5CI,EAAQ,IAAAC,QAgBV,MAAMC,EAAgB,IAjBtB,MAOEC,kBAAkBC,GAChB,IACI,aAAaC,EAAAC,QAAMC,IAAI,sCAAsCH,aAAiBI,EAAAf,EAAA,CAAEgB,KAAMT,K,CAExF,MAAOU,GACP,MAAM,IAAIC,MAAMD,EAAIE,Q,EATxBC,cAFAL,EAAAM,EAAA,CAAAL,KAAAT,EAAQ,C,kBAAG,qCAGTS,KAAKM,KAAO,C,GAgBhB,SAASC,IAED,MAAMC,EAAYC,aAAaC,QA9Bb,WAgClBpB,EAAeqB,UAAUC,IAAI,aAEzB3B,EAAY0B,UAAUE,SAAS,cACnC5B,EAAY0B,UAAUG,OAAO,aAE7B1B,EAAcuB,UAAUC,IAAI,aAEhC,IAAIG,EAAQ,CACRC,QAAS,IAGT,GAAIR,EACJ,IACI,MAAMS,EAAWC,KAAKC,MAAMX,GAC5BY,QAAQC,IAAIJ,GACZA,EAASK,KAAKC,IACV9B,EACK+B,YAAYD,GACZE,MAAK,EAACC,KAAEA,MACLN,QAAQC,IAAIK,GACZA,EAAKC,UAAYD,EAAKE,OACtBb,EAAMC,QAAQa,KAAKH,GACnBN,QAAQC,IAAIN,IAEZ,EAAAe,EAAAC,cAAahB,EAAM,IAGtBiB,OAAM/B,IACHmB,QAAQC,IAAIpB,EAAI,GAClB,G,CAGd,MAAOgC,GACHb,QAAQa,MAAM,oBAAqBA,EAAM9B,Q,EAmDrDf,EAAc8C,iBAAiB,QAAS3B,GACxCtB,EAAYiD,iBAAiB,SA9C7B,WACI7C,EAAa8C,UAAY,GAEzB,MAAM3B,EAAYC,aAAaC,QAzET,SA2EtBpB,EAAeqB,UAAUC,IAAI,aAEzBxB,EAAcuB,UAAUE,SAAS,cACjCzB,EAAcuB,UAAUG,OAAO,aAEnC7B,EAAY0B,UAAUC,IAAI,aAEtB,IAAIG,EAAQ,CACZC,QAAS,IAGb,GAAIR,EACA,IACI,MAAMS,EAAWC,KAAKC,MAAMX,GAC5BY,QAAQC,IAAIJ,GAEZA,EAASK,KAAKC,IACV9B,EACK+B,YAAYD,GACZE,MAAK,EAACC,KAAEA,MACLN,QAAQC,IAAIK,GACZA,EAAKC,UAAYD,EAAKE,OACtBb,EAAMC,QAAQa,KAAKH,GACnBN,QAAQC,IAAIN,IAEZ,EAAAe,EAAAC,cAAahB,EAAM,IAGtBiB,OAAM/B,IACHmB,QAAQC,IAAIpB,EAAI,GAClB,G,CAGd,MAAOgC,GACHb,QAAQa,MAAM,oBAAqBA,EAAM9B,Q,KAQrDiC,OAAOF,iBAAiB,OAAQ3B","sources":["src/myLibary.js","src/get_localstorage_info.js"],"sourcesContent":["import './spinner'\nimport './modal-team.js'\nimport './get_localstorage_info.js'","import { renderMarkup } from './js/render-markup.js';\nimport axios from 'axios';\n\nconst STORAGE_KEY_WATCH = 'watched';\nconst STORAGE_KEY_QUEUE = 'queue';\nconst queueButton = document.querySelector('.js_queue');\nconst watchedButton = document.querySelector('.js_watched');\nconst galleryFilms = document.querySelector('.galleryFilms-js');\nconst nomoviesimages = document.querySelector('.start');\n\n\nclass ApiMovieSearch {\n  #API_KEY = '1962278b5026dd7c7bb0a91cd47f798b';\n \n  constructor() {\n    this.page = 1;\n  }\n\n  async fetchMovies(film_Id) {\n    try {\n        return await axios.get(`https://api.themoviedb.org/3/movie/${film_Id}?api_key=${this.#API_KEY}`);\n        \n    } catch (err) {\n      throw new Error(err.message);\n    }\n  }\n}\n\nconst apiInfoMovies = new ApiMovieSearch ();\n\n\nfunction handleGetWatchedFilms() {\n        // filmList.innerHTML = \"\";\n        const savedData = localStorage.getItem(STORAGE_KEY_WATCH);\n\n        nomoviesimages.classList.add('is-hidden');\n    \n        if (queueButton.classList.contains('is-active')) {\n        queueButton.classList.remove('is-active');\n        }\n        watchedButton.classList.add('is-active');\n    \n    let films = {\n        results: [],\n    };\n    \n        if (savedData) {\n        try {\n            const filmData = JSON.parse(savedData);\n            console.log(filmData);\n            filmData.map((id) => {\n                apiInfoMovies\n                    .fetchMovies(id)\n                    .then(({ data }) => {\n                        console.log(data);\n                        data.genre_ids = data.genres;\n                        films.results.push(data);\n                        console.log(films);\n                    \n                        renderMarkup(films); \n                    \n                        })                                 \n                    .catch(err => {\n                        console.log(err)\n                    })\n            })\n            }\n        catch (error) {\n            console.error(\"Get state error: \", error.message);\n            }\n        }        \n};\n\n\nfunction handleGetQueueFilms() {\n    galleryFilms.innerHTML = \"\";\n    \n    const savedData = localStorage.getItem(STORAGE_KEY_QUEUE);\n    \n    nomoviesimages.classList.add('is-hidden');\n    \n    if (watchedButton.classList.contains('is-active')) {\n        watchedButton.classList.remove('is-active');\n    }\n    queueButton.classList.add('is-active');\n     \n        let films = {\n        results: [],\n    };\n\n    if (savedData) {\n        try {\n            const filmData = JSON.parse(savedData);\n            console.log(filmData);\n            \n            filmData.map((id) => {\n                apiInfoMovies\n                    .fetchMovies(id)\n                    .then(({ data }) => {\n                        console.log(data);\n                        data.genre_ids = data.genres;\n                        films.results.push(data);\n                        console.log(films);\n                    \n                        renderMarkup(films);\n                    \n                    })\n                    .catch(err => {\n                        console.log(err)\n                    })\n            })\n        }\n        catch (error) {\n            console.error(\"Get state error: \", error.message);\n    }\n        }   \n};\n\n\nwatchedButton.addEventListener('click', handleGetWatchedFilms);\nqueueButton.addEventListener('click', handleGetQueueFilms);\nwindow.addEventListener('load', handleGetWatchedFilms)"],"names":["parcelRequire","$jkMrE","$3583b7d8092fdd31$var$queueButton","document","querySelector","$3583b7d8092fdd31$var$watchedButton","$3583b7d8092fdd31$var$galleryFilms","$3583b7d8092fdd31$var$nomoviesimages","$3583b7d8092fdd31$var$_API_KEY","WeakMap","$3583b7d8092fdd31$var$apiInfoMovies","async","film_Id","$2shzp","default","get","$parcel$interopDefault","this","err","Error","message","constructor","$g6yUq","page","$3583b7d8092fdd31$var$handleGetWatchedFilms","savedData","localStorage","getItem","classList","add","contains","remove","films","results","filmData","JSON","parse","console","log","map","id","fetchMovies","then","data","genre_ids","genres","push","$5o68A","renderMarkup","catch","error","addEventListener","innerHTML","window"],"version":3,"file":"myLibary.9e0d207d.js.map"}